---
title: "R Project 1 - Hello R"
author: "Jade Gee"
date: "1/23/2020"
output: 
  html_document: 
    fig_height: 1
    fig_width: 3
    highlight: zenburn
    theme: cerulean
    toc_depth: 2
---

### Load Packages

```{r load-packages, message=FALSE}
library(tidyverse) 
library(datasauRus)
```


### Exercise 1

The datasaurus_dozen is a data frame with 1846 rows and 3 variables. The variables included in the data frame are:

  + __dataset__: indicates which dataset the data are from
  + __x__: x-values 
  + __y__:  y-values 

```{r datasaurus_dozen}
datasaurus_dozen %>%
count(dataset) %>%
print(13)
```

### Exercise 2

First let's plot the data in the dino dataset:

```{r plot-dino, fig.height=3, fig.width=6}
dino_data <- datasaurus_dozen %>%
  filter(dataset == "dino")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
  geom_point()
```

And next calculate the correlation between `x` and `y` in this dataset:

```{r cor-dino}
dino_data %>%
  summarize(r = cor(x, y))
```

### Exercise 3

We will plot the data for the star dataset:

```{r plot-star, fig.height=3, fig.width=6}
star_data <- datasaurus_dozen %>%
  filter(dataset == "star")
ggplot(data = star_data, mapping = aes(x = x, y = y)) +
  geom_point()
```

Then we will calculate the correlation between `x` and `y` in this dataset:

```{r cor-star}
star_data %>%
  summarize(r = cor(x, y))
```

### Exercise 4

Now, we will plot the data for the circle dataset:

```{r plot-circle, fig.height=3, fig.width=6}
circle_data <- datasaurus_dozen %>%
  filter(dataset == "circle")
ggplot(data = circle_data, mapping = aes(x = x, y = y)) +
  geom_point()
```

Then, calculate the correlation between `x` and `y` in this dataset:
```{r cor-circle}
circle_data %>%
  summarize(r = cor(x,y))
```

### Exercise 5

To better examine, we will plot all of the datasets at once:

```{r plot-all, fig.height=9, fig.width=7}
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
  geom_point()+
  facet_wrap(~ dataset, ncol = 3) + # Facet dataset variable, in 3 cols
  theme(legend.position = "none")
```
``` {r datasaurus_dzn}
datasaurus_dozen %>%
  group_by(dataset) %>%
  summarize(r = cor(x,y)) %>%
  print(13)
```
